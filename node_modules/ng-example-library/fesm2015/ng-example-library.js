import { Injectable, Component, NgModule, defineInjectable } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
class NgExampleLibraryService {
    constructor() { }
    /**
     * @return {?}
     */
    getData() {
        return 'NgExampleLibraryService';
    }
}
NgExampleLibraryService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] },
];
/** @nocollapse */
NgExampleLibraryService.ctorParameters = () => [];
/** @nocollapse */ NgExampleLibraryService.ngInjectableDef = defineInjectable({ factory: function NgExampleLibraryService_Factory() { return new NgExampleLibraryService(); }, token: NgExampleLibraryService, providedIn: "root" });

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
class NgExampleLibraryComponent {
    constructor() { }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
NgExampleLibraryComponent.decorators = [
    { type: Component, args: [{
                selector: 'exam-ng-example-library',
                template: `
    <p>
      ng-example-library works!
    </p>
  `,
                styles: []
            },] },
];
/** @nocollapse */
NgExampleLibraryComponent.ctorParameters = () => [];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
class NgExampleLibraryModule {
}
NgExampleLibraryModule.decorators = [
    { type: NgModule, args: [{
                imports: [],
                declarations: [
                    NgExampleLibraryComponent
                ],
                exports: [
                    NgExampleLibraryComponent
                ]
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

export { NgExampleLibraryService, NgExampleLibraryComponent, NgExampleLibraryModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctZXhhbXBsZS1saWJyYXJ5LmpzLm1hcCIsInNvdXJjZXMiOlsibmc6Ly9uZy1leGFtcGxlLWxpYnJhcnkvbGliL25nLWV4YW1wbGUtbGlicmFyeS5zZXJ2aWNlLnRzIiwibmc6Ly9uZy1leGFtcGxlLWxpYnJhcnkvbGliL25nLWV4YW1wbGUtbGlicmFyeS5jb21wb25lbnQudHMiLCJuZzovL25nLWV4YW1wbGUtbGlicmFyeS9saWIvbmctZXhhbXBsZS1saWJyYXJ5Lm1vZHVsZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIE5nRXhhbXBsZUxpYnJhcnlTZXJ2aWNlIHtcblxuICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gIGdldERhdGEoKSB7XG4gICAgcmV0dXJuICdOZ0V4YW1wbGVMaWJyYXJ5U2VydmljZSc7XG4gIH1cbn1cbiIsImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2V4YW0tbmctZXhhbXBsZS1saWJyYXJ5JyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8cD5cbiAgICAgIG5nLWV4YW1wbGUtbGlicmFyeSB3b3JrcyFcbiAgICA8L3A+XG4gIGAsXG4gIHN0eWxlczogW11cbn0pXG5leHBvcnQgY2xhc3MgTmdFeGFtcGxlTGlicmFyeUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICBuZ09uSW5pdCgpIHtcbiAgfVxuXG59XG4iLCJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdFeGFtcGxlTGlicmFyeUNvbXBvbmVudCB9IGZyb20gJy4vbmctZXhhbXBsZS1saWJyYXJ5LmNvbXBvbmVudCc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgTmdFeGFtcGxlTGlicmFyeUNvbXBvbmVudFxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgTmdFeGFtcGxlTGlicmFyeUNvbXBvbmVudFxuICBdXG59KVxuZXhwb3J0IGNsYXNzIE5nRXhhbXBsZUxpYnJhcnlNb2R1bGUgeyB9XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7SUFPRSxpQkFBaUI7Ozs7SUFFakIsT0FBTztRQUNMLE9BQU8seUJBQXlCLENBQUM7S0FDbEM7OztZQVRGLFVBQVUsU0FBQztnQkFDVixVQUFVLEVBQUUsTUFBTTthQUNuQjs7Ozs7Ozs7OztBQ0pEO0lBYUUsaUJBQWlCOzs7O0lBRWpCLFFBQVE7S0FDUDs7O1lBZEYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx5QkFBeUI7Z0JBQ25DLFFBQVEsRUFBRTs7OztHQUlUO2dCQUNELE1BQU0sRUFBRSxFQUFFO2FBQ1g7Ozs7Ozs7OztBQ1ZEOzs7WUFHQyxRQUFRLFNBQUM7Z0JBQ1IsT0FBTyxFQUFFLEVBQ1I7Z0JBQ0QsWUFBWSxFQUFFO29CQUNaLHlCQUF5QjtpQkFDMUI7Z0JBQ0QsT0FBTyxFQUFFO29CQUNQLHlCQUF5QjtpQkFDMUI7YUFDRjs7Ozs7Ozs7Ozs7Ozs7OyJ9